var membersuite = membersuite || {}; membersuite.priorityPaymentAjaxAPI = membersuite.priorityPaymentAjaxAPI || {}, membersuite.priorityPaymentAjaxAPI = function (e) { var r, t = {}, n = function (r) { return e.ajax({ url: r.url, headers: r.headers, contentType: r.contentType, method: r.method, dataType: r.dataType, data: r.data, success: function (e) { t = e, r.success(e) }, error: function (e) { r.error(e); var t = JSON.parse(e.responseText); alert(t.details) } }) }, a = function (t) { var a = this; a.options = { url: t.uri + "vault/customer?token=" + t.requestToken, headers: { "Content-Type": "application/json" }, contentType: "application/json; charset=utf-8", method: "POST", dataType: "json", data: t.data, success: function (e) { r = e }, error: function () { } }, e.when(n(a.options)).then(function () { var e = t.originalCardNumber, n = e.substring(e.length - 5); return t.callback({ isSuccessful: !0, vaultToken: r.id + "|" + r.cardAccount.token + "|" + n }) }).fail(function () { }) }, u = function (t) { var a = this; a.options = { url: t.uri + "vault?token=" + t.requestToken + "&customerId=" + t.customerId, headers: { "Content-Type": "application/json" }, contentType: "application/json; charset=utf-8", method: "POST", dataType: "json", data: t.data, success: function (e) { r = e }, error: function () { } }, e.when(n(a.options)).then(function () { var e = t.originalCardNumber, n = e.substring(e.length - 5); return t.callback({ isSuccessful: !0, vaultToken: t.customerId + "|" + r + "|" + n }) }).fail(function () { }) }; return { createCustomerVaultToken: a, createVaultToken: u } }(jQuery); var membersuite = membersuite || {}; membersuite.ajaxAPI = membersuite.ajaxAPI || {}, membersuite.ajaxAPI = function (e) { "use strict"; function r(r) { var t = r.saveBtnId; return e(".cc-number").val(r.vaultToken).hide(), e(t).trigger("click"), e(".masked-cc-number").show().val("Stop snooping!"), !0 } return { persistToken: r } }(jQuery); var membersuite = membersuite || {}; membersuite.paymentProcessor = membersuite.paymentProcessor || {}, membersuite.paymentProcessor = function (e, r, t) { "use strict"; function n(e) { o = e.ppConfig, s = e.msConfig, null == o.CustomerID ? u() : a() } function a() { var e = s.$cardNumberElem.val(), t = s.$expiryMonthElem.val(), n = s.$expiryYearElem.val(); c = e; var a = { number: e, expiryMonth: t, expiryYear: n }, u = JSON.stringify(a), m = { data: u, requestToken: o.AccessToken, customerId: o.CustomerID, uri: o.EndpointUri, originalCardNumber: c, callback: i }; r.createVaultToken(m) } function u() { var e = s.$cardNumberElem.val(), t = s.$expiryMonthElem.val(), n = s.$expiryYearElem.val(); c = e; var a = { number: s.guid, cardAccount: { number: e, expiryMonth: t, expiryYear: n } }, u = JSON.stringify(a), m = { data: u, requestToken: o.AccessToken, uri: o.EndpointUri, originalCardNumber: c, callback: i }; r.createCustomerVaultToken(m) } function i(e) { if (e.isSuccessful) { var r = { vaultToken: e.vaultToken, saveBtnId: s.saveBtnId, originalCardNumber: c, $cardElem: s.$cardNumberElem }; t.persistToken(r) } return !0 } var o = { IsPreferredConfigured: !1, CustomerID: "0", AccessToken: "0", EndpointUri: "" }, s = { guid: "", $cardNumberElem: null, $expiryMonthElem: null, $expiryYearElem: null, saveBtnId: null }, c = ""; return { init: n } }(jQuery, membersuite.priorityPaymentAjaxAPI, membersuite.ajaxAPI);